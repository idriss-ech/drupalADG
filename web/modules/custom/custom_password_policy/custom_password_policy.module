<?php
/**
 * @file
 * Contains custom_password_policy.module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;

/**
 * Implements hook_entity_base_field_info_alter().
 */
function custom_password_policy_entity_base_field_info_alter(&$fields, EntityTypeInterface $entity_type) {
  // Only alter the user entity type.
  if ($entity_type->id() === 'user') {
    // Check if the pass field exists.
    if (isset($fields['pass']) && $fields['pass'] instanceof BaseFieldDefinition) {
      // Add the custom constraint to the pass field.
      $fields['pass']->addConstraint('PasswordPolicy', []);
    }
  }
}

/**
 * Implements hook_install().
 */
function custom_password_policy_install() {
  // Set default values for the module's configuration.
  \Drupal::configFactory()->getEditable('custom_password_policy.settings')
    ->set('default_message', 'Welcome to our site!')  // Set a default welcome message.
    ->save();
}



/**
 * Implements hook_entity_presave().
 */
function custom_password_policy_entity_presave(EntityInterface $entity) {
  if ($entity->getEntityTypeId() === 'node' && $entity->bundle() === 'article') {
    // Check if this is a new node (doesn't have an ID yet).
    if ($entity->isNew()) {
      $title = $entity->get('title')->value;

      // Prefix the title with "HEY-" if it's not already prefixed.
      if (strpos($title, 'HEY-') !== 0) {
        $entity->set('title', 'HEY-' . $title);
      }
    }
  }
}




/**
 * Implements hook_theme_suggestions_alter().
 */
function custom_password_policy_theme_suggestions_alter(array &$suggestions, array $variables) {
  // Check if the theme hook is 'user'.
  if ($variables['theme_hook_original'] === 'user') {
    // Check if the view mode is available in the variables.
    if (isset($variables['elements']['#view_mode'])) {
      // Get the view mode of the user entity.
      $view_mode = $variables['elements']['#view_mode'];

      // Add a custom theme suggestion based on the view mode.
      $suggestions[] = 'user__' . $view_mode;
    }
  }
}

function custom_password_policy_theme() {
  return [
    'my__page__custom' => [
      'template' => 'my--page--custom',
      'render element' => 'elements',
    ],
  ];
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for node templates.
 */
function custom_password_policy_theme_suggestions_node_alter(array &$suggestions, array $variables)
{
  if (isset($variables['elements']['#node']) && $variables['elements']['#node'] instanceof \Drupal\node\NodeInterface) {
    if ($variables['elements']['#node']->bundle() == 'page') {
            $suggestions[] = 'my__page__custom';
        }
    }
}
